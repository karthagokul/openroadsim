# Sample workflow for building and deploying documentation with MkDocs to GitHub Pages
name: Deploy MkDocs with GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Or your preferred Python version

      - name: Install MkDocs dependencies
        run: |
          pip install mkdocs mkdocs-material mkdocstrings[python]

      - name: Build MkDocs documentation
        # Assuming your mkdocs.yml is in the root and your source docs are in the 'docs' directory (default MkDocs behavior)
        # If your mkdocs.yml is in a subdirectory, adjust the command.
        run: mkdocs build --site-dir _site # Build to _site directory, as expected by upload-pages-artifact

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site' # Specify the directory where MkDocs built the site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
